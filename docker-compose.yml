x-configs: &ch-default-configs
  # image: clickhouse/clickhouse-server:25.1
  build:
    context: .
    dockerfile: Dockerfile.clickhouse
  environment:
      TZ: "Europe/Moscow"
  ulimits:
    nproc: 65535
    nofile:
      soft: 262144
      hard: 262144
  networks:
    - ch_project_work
  depends_on:
    - zookeeper
    
services:
  zookeeper:
    image: 'bitnami/zookeeper:3.9.3'
    networks:
      - ch_project_work
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOOKEEPER_CLIENT_PORT=2181
      - TZ="Europe/Moscow"
    ports:
      - "2182:2181"
      - "2888:2888"
      - "3888:3888"

  clickhouse1:
    <<: *ch-default-configs
    volumes:
      - ./configs/default_user.xml:/etc/clickhouse-server/users.d/default_user.xml
      - ./configs/z_config.xml:/etc/clickhouse-server/config.d/z_config.xml
      - ./configs/macros_ch1.xml:/etc/clickhouse-server/config.d/macros.xml
      - ./configs/clickhouse-backup.yml:/etc/clickhouse-backup/config.yml
      - ./configs/s3-storage.xml:/etc/clickhouse-server/config.d/s3-storage.xml
      - ./configs/prometheus_ch.xml:/etc/clickhouse-server/config.d/s3-prometheus_ch.xml
      - ./data:/var/lib/clickhouse/user_files/data
    ports:
      - "8002:9000"
      - "9123:8123"
      
  clickhouse2:
    <<: *ch-default-configs
    volumes:
      - ./configs/default_user.xml:/etc/clickhouse-server/users.d/default_user.xml
      - ./configs/z_config.xml:/etc/clickhouse-server/config.d/z_config.xml
      - ./configs/macros_ch2.xml:/etc/clickhouse-server/config.d/macros.xml
      - ./configs/clickhouse-backup.yml:/etc/clickhouse-backup/config.yml
      - ./configs/s3-storage.xml:/etc/clickhouse-server/config.d/s3-storage.xml
      - ./configs/prometheus_ch.xml:/etc/clickhouse-server/config.d/s3-prometheus_ch.xml
      - ./data:/var/lib/clickhouse/user_files/data
    ports:
      - "8003:9000"
      - "9124:8123"
      
  clickhouse3:
    <<: *ch-default-configs
    volumes:
      - ./configs/default_user.xml:/etc/clickhouse-server/users.d/default_user.xml
      - ./configs/z_config.xml:/etc/clickhouse-server/config.d/z_config.xml
      - ./configs/macros_ch3.xml:/etc/clickhouse-server/config.d/macros.xml
      - ./configs/clickhouse-backup.yml:/etc/clickhouse-backup/config.yml
      - ./configs/s3-storage.xml:/etc/clickhouse-server/config.d/s3-storage.xml
      - ./configs/prometheus_ch.xml:/etc/clickhouse-server/config.d/s3-prometheus_ch.xml
      - ./data:/var/lib/clickhouse/user_files/data
    ports:
      - "8004:9000"
      - "9125:8123"

  clickhouse4:
    <<: *ch-default-configs
    volumes:
      - ./configs/default_user.xml:/etc/clickhouse-server/users.d/default_user.xml
      - ./configs/z_config.xml:/etc/clickhouse-server/config.d/z_config.xml
      - ./configs/macros_ch4.xml:/etc/clickhouse-server/config.d/macros.xml
      - ./configs/clickhouse-backup.yml:/etc/clickhouse-backup/config.yml
      - ./configs/s3-storage.xml:/etc/clickhouse-server/config.d/s3-storage.xml
      - ./configs/prometheus_ch.xml:/etc/clickhouse-server/config.d/s3-prometheus_ch.xml
      - ./data:/var/lib/clickhouse/user_files/data
    ports:
      - "8005:9000"
      - "9126:8123"

  nifi:
    image: apache/nifi:1.27.0
    ports:
      - 18443:8443 # Unsecured HTTP Web Port
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - SINGLE_USER_CREDENTIALS_USERNAME=admin
      - SINGLE_USER_CREDENTIALS_PASSWORD=Password123456
      - NIFI_WEB_HTTP_PORT=8443
    volumes:
      - ./nifi/drivers:/opt/nifi/nifi-current/drivers
      - ./nifi/shared-folder:/opt/nifi/nifi-current/ls-target
      - nifi_conf:/opt/nifi/nifi-current/conf
      - nifi_flowfiles:/opt/nifi/nifi-current/flowfile_repository
      - nifi_content:/opt/nifi/nifi-current/content_repository
      - nifi_provenance:/opt/nifi/nifi-current/provenance_repository
      - nifi_database:/opt/nifi/nifi-current/database_repository
      - ./nifi/logs:/opt/nifi/nifi-current/logs
      - ./data:/data:ro
    networks:
      - ch_project_work

  kafka:
    image: apache/kafka:3.8.0
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:29093
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
    networks:
      - ch_project_work

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    ports:
      - 8082:8080
    environment:
      - DYNAMIC_CONFIG_ENABLED=true
      - KAFKA_CLUSTERS_0_NAME=KafkaCluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
    networks:
      - ch_project_work
    volumes:
      - kafka-ui-data:/app/data
  
  prometheus:
    image: prom/prometheus:v2.53.4
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"
    networks:
      - ch_project_work

  grafana:
    image: grafana/grafana:11.5.2-ubuntu
    user: root
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_lib:/var/lib/grafana
      - ./configs/grafana/provisioning/:/etc/grafana/provisioning/
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"
    networks:
      - ch_project_work

  superset:
    # image: apache/superset
    build: 
      context: .
      dockerfile: Dockerfile.superset
    restart: unless-stopped
    ports:
      - "8088:8088"
    networks:
      - ch_project_work
    volumes:
      - superset_data:/var/lib/superset
      - superset_config:/app/superset_home
    environment:
      - SUPERSET_SECRET_KEY=9wc5+erMt60+lxrXDf3RjeIR+zONpEFusO00Np7JzfliMTI1e+RXnHcQ
      - TZ=Europe/Moscow
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  netflow_producer:
    build:
      context: .
      dockerfile: Dockerfile.netflow_producer
    restart: unless-stopped
    networks:
      - ch_project_work
    volumes:
      - ./netflow_producer/logs:/netflow_producer/logs
      - ./data:/data
    environment:
      TZ: Europe/Moscow
      KAFKA_BROKER: kafka:29092
      KAFKA_TOPIC: csv_data_topic
      CSV_DIRECTORY: /data/TelecomX/telecom100k/
      LOG_FILE: logs/netflow_producer.log
      TIME_POINTER_FILE: logs/time_pointer.txt

networks:
  ch_project_work:
    driver: bridge

volumes:
  grafana_lib:
  superset_data:
  superset_config:
  nifi_conf:
  nifi_flowfiles:
  nifi_content:
  nifi_provenance:
  nifi_database:
  kafka-ui-data:
